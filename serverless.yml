service: Serverless-Framework-Demo

frameworkVersion: '3'

plugins:
  - serverless-offline
  - serverless-dynamodb
  - serverless-s3-local
provider:
  name: aws
  runtime: nodejs18.x
  region: ap-northeast-1
  stage: ${opt:stage, self:custom.defaultStage}
  environment:
    XXXXXXX: ${self:custom.otherfile.environment.${self:provider.stage}.XXXXXXX}
    YYYYYYY: ${self:custom.otherfile.environment.${self:provider.stage}.YYYYYYY}

functions:
  app:
    handler: handler.main
    events:
      - http:
          method: ANY
          path: '{proxy+}'

resources:
  Resources:
    DynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: pokemon
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

custom:
  defaultStage: dev
  otherfile:
    environment:
      dev: ${file(./conf/dev.yml)}
      prod: ${file(./conf/dev.yml)}
  serverless-offline:
    useChildProcesses: true #ホットリロードの為の設定
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      development:
        sources:
          - table: pokemon
            sources: [./migrations/pokemon.json]